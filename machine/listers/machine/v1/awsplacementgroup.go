// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/machine/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AWSPlacementGroupLister helps list AWSPlacementGroups.
// All objects returned here must be treated as read-only.
type AWSPlacementGroupLister interface {
	// List lists all AWSPlacementGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.AWSPlacementGroup, err error)
	// AWSPlacementGroups returns an object that can list and get AWSPlacementGroups.
	AWSPlacementGroups(namespace string) AWSPlacementGroupNamespaceLister
	AWSPlacementGroupListerExpansion
}

// aWSPlacementGroupLister implements the AWSPlacementGroupLister interface.
type aWSPlacementGroupLister struct {
	indexer cache.Indexer
}

// NewAWSPlacementGroupLister returns a new AWSPlacementGroupLister.
func NewAWSPlacementGroupLister(indexer cache.Indexer) AWSPlacementGroupLister {
	return &aWSPlacementGroupLister{indexer: indexer}
}

// List lists all AWSPlacementGroups in the indexer.
func (s *aWSPlacementGroupLister) List(selector labels.Selector) (ret []*v1.AWSPlacementGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AWSPlacementGroup))
	})
	return ret, err
}

// AWSPlacementGroups returns an object that can list and get AWSPlacementGroups.
func (s *aWSPlacementGroupLister) AWSPlacementGroups(namespace string) AWSPlacementGroupNamespaceLister {
	return aWSPlacementGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AWSPlacementGroupNamespaceLister helps list and get AWSPlacementGroups.
// All objects returned here must be treated as read-only.
type AWSPlacementGroupNamespaceLister interface {
	// List lists all AWSPlacementGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.AWSPlacementGroup, err error)
	// Get retrieves the AWSPlacementGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.AWSPlacementGroup, error)
	AWSPlacementGroupNamespaceListerExpansion
}

// aWSPlacementGroupNamespaceLister implements the AWSPlacementGroupNamespaceLister
// interface.
type aWSPlacementGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AWSPlacementGroups in the indexer for a given namespace.
func (s aWSPlacementGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.AWSPlacementGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.AWSPlacementGroup))
	})
	return ret, err
}

// Get retrieves the AWSPlacementGroup from the indexer for a given namespace and name.
func (s aWSPlacementGroupNamespaceLister) Get(name string) (*v1.AWSPlacementGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("awsplacementgroup"), name)
	}
	return obj.(*v1.AWSPlacementGroup), nil
}
